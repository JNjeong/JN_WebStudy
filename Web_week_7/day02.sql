/* SELECT 활용 */
SELECT * FROM EMPLOYEES;

-- WHERE
SELECT EMPLOYEE_ID, FIRST_NAME, LAST_NAME FROM EMPLOYEES WHERE FIRST_NAME = 'Lex';

-- QUIZ : EMPLOYE ID, LAST NAME, EMAIL 출력. 조건 : LASTNAME Smith
SELECT EMPLOYEE_ID, LAST_NAME, EMAIL FROM EMPLOYEES WHERE LAST_NAME = 'Smith';

-- ORDER BY 
SELECT * FROM EMPLOYEES ORDER BY HIRE_DATE ASC;

SELECT * FROM EMPLOYEES ORDER BY HIRE_DATE DESC;


/* AS */
SELECT e.EMPLOYEE_ID , e.FIRST_NAME , e.LAST_NAME AS "LAST" FROM EMPLOYEES e;

-- AS 응용
SELECT e.EMPLOYEE_ID AS "ID", e.FIRST_NAME AS "NAME", e.SALARY FROM EMPLOYEES e ;


/* DISTINCT */
SELECT DISTINCT JOB_ID FROM EMPLOYEES e ;


/* 전체 활용 */
SELECT * FROM EMPLOYEES e WHERE SALARY >= 5000;

SELECT * FROM DEPARTMENTS d ;

SELECT * FROM EMPLOYEES e WHERE DEPARTMENT_ID = 50 AND JOB_ID = 'SH_CLERK' ;

--OR 활용 
--QUIT : EMPLOYEES 에서 DEPARTMENT_ID 가 50이거나, MANAGER_ID가 100인사람의 FIRST, LAST NAME, MANAGER_ID, DEPARTMENT_ID 출력하기
SELECT e.FIRST_NAME , e.LAST_NAME , e.MANAGER_ID , e.DEPARTMENT_ID FROM EMPLOYEES e WHERE e.DEPARTMENT_ID = 50 OR e.MANAGER_ID = 100 ; 


/* NOT, <> */
SELECT * FROM EMPLOYEES e WHERE NOT DEPARTMENT_ID = 50 ;


/* BETWEEN */
SELECT * FROM EMPLOYEES e WHERE SALARY >= 4000 AND SALARY <= 8000 ;
SELECT * FROM EMPLOYEES e WHERE SALARY BETWEEN 4000 AND 8000 ;


/* IN */
SELECT e.FIRST_NAME , e.LAST_NAME , e.SALARY FROM EMPLOYEES e WHERE SALARY = 6500 OR SALARY = 7500 OR SALARY = 13000 ; 
SELECT e.FIRST_NAME , e.LAST_NAME , e.SALARY FROM EMPLOYEES e WHERE SALARY IN (6500, 7500, 13000) ; 


/* LIKE */
SELECT FIRST_NAME, LAST_NAME FROM EMPLOYEES e WHERE FIRST_NAME LIKE 'D%' ORDER BY FIRST_NAME ;
SELECT FIRST_NAME, LAST_NAME FROM EMPLOYEES e WHERE FIRST_NAME LIKE '%d' ORDER BY FIRST_NAME ;
SELECT FIRST_NAME, LAST_NAME FROM EMPLOYEES e WHERE FIRST_NAME LIKE '%d%' ORDER BY FIRST_NAME ;


/* IS NULL */
SELECT * FROM EMPLOYEES e WHERE COMMISSION_PCT IS NULL ;
SELECT * FROM EMPLOYEES e WHERE COMMISSION_PCT IS NOT NULL ;


/* 집계 */
-- SUM
SELECT SUM(e.SALARY) FROM EMPLOYEES e ;

-- COUNT
SELECT COUNT(*) FROM EMPLOYEES e ;
SELECT COUNT(e.EMPLOYEE_ID) FROM EMPLOYEES e ;

--DISTINCT + COUNT
SELECT COUNT(DISTINCT COMMISSION_PCT) "TYPES OF COMMISSION" FROM EMPLOYEES e ;

--QUIZ : EMPLOYEES 에서 FIRST_NAME의 개수와 중복을 제거한 FIRST_NAME의 개수 조회
SELECT COUNT(FIRST_NAME), COUNT(DISTINCT FIRST_NAME) FROM EMPLOYEES ;

--AVG
SELECT AVG(SALARY) FROM EMPLOYEES e ;
SELECT AVG(SALARY) FROM EMPLOYEES e WHERE DEPARTMENT_ID = 80 ;

--MAX
SELECT MAX(SALARY) FROM EMPLOYEES e ;
SELECT MAX(HIRE_DATE) FROM EMPLOYEES e ;

--MIN
SELECT MIN(SALARY) FROM EMPLOYEES e ;
SELECT MIN(HIRE_DATE) FROM EMPLOYEES e ;

--ABS
SELECT ABS(-23) FROM DUAL ;

--ROUND
SELECT ROUND(0.123), ROUND(0.543), ROUND(2.512) FROM DUAL ;

--TRUNCATE
SELECT TRUNC(1234.123456789) FROM DUAL;
SELECT TRUNC(1234.123456789, 2) FROM DUAL;--소수점 2째자리
SELECT TRUNC(1234.123456789, 0) FROM DUAL;
SELECT TRUNC(1234.123456789, -1) FROM DUAL;

